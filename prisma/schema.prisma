// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Agency {
  id            Int            @id @default(autoincrement())
  name          String
  createdAt     DateTime       @default(now())
  Users         User[]
  Clients       Client[]
  ClientInvites ClientInvite[]
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique()
  phone         String
  password      String
  firstName     String
  lastName      String
  PasswordReset PasswordReset?
  Agency        Agency         @relation(fields: [agencyId], references: [id])
  agencyId      Int            @unique()
  isOwner       Boolean        @default(false)
  createdAt     DateTime       @default(now())
}

model PasswordReset {
  id        Int      @id @default(autoincrement())
  User      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique()
  token     String
  createdAt DateTime @default(now())
}

model Client {
  id        Int      @id @default(autoincrement())
  email     String
  phone     String
  password  String
  firstName String
  lastName  String
  createdAt DateTime @default(now())
  Agency    Agency   @relation(fields: [agencyId], references: [id])
  agencyId  Int
}

model ClientInvite {
  id         Int          @id @default(autoincrement())
  token      String
  email      String
  phone      String
  firstName  String
  lastName   String
  Agency     Agency       @relation(fields: [agencyId], references: [id])
  agencyId   Int
  Flow       Flow         @relation(fields: [flowId], references: [id])
  flowId     Int
  createdAt  DateTime     @default(now())
  StepAnswer StepAnswer[]
}

model Flow {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now())
  Steps         Step[]
  ClientInvites ClientInvite[]
  StepAnswer    StepAnswer[]
}

model Step {
  id         Int          @id @default(autoincrement())
  title      String
  category   String
  content    String?
  form       Json?
  createdAt  DateTime     @default(now())
  Flow       Flow         @relation(fields: [flowId], references: [id])
  flowId     Int
  StepAnswer StepAnswer[]
}

model StepAnswer {
  id             Int          @id @default(autoincrement())
  data           Json?
  createdAt      DateTime     @default(now())
  ClientInvite   ClientInvite @relation(fields: [clientInviteId], references: [id])
  clientInviteId Int
  Flow           Flow         @relation(fields: [flowId], references: [id])
  flowId         Int
  Step           Step         @relation(fields: [stepId], references: [id])
  stepId         Int

  @@unique([flowId, stepId, clientInviteId])
}
